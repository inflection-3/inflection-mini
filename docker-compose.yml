version: "3.8"

services:
  # API Server Service
  api:
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      args:
        # Pass build-time environment variables if needed
        NODE_ENV: production
    restart: unless-stopped
    ports:
      - "3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    networks:
      - dokploy-network
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # API Router configuration
      - "traefik.http.routers.mini-api.rule=Host(`api.yourdomain.com`) || (Host(`yourdomain.com`) && PathPrefix(`/api`))"
      - "traefik.http.routers.mini-api.entrypoints=websecure"
      - "traefik.http.routers.mini-api.tls.certResolver=letsencrypt"
      - "traefik.http.services.mini-api.loadbalancer.server.port=3001"
      
      # Strip /api prefix if using path-based routing
      - "traefik.http.middlewares.mini-api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.mini-api.middlewares=mini-api-stripprefix"
      
      # CORS middleware for API
      - "traefik.http.middlewares.mini-api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.mini-api-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.mini-api-cors.headers.accesscontrolalloworiginlist=https://yourdomain.com,https://www.yourdomain.com"
      - "traefik.http.middlewares.mini-api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.mini-api-cors.headers.addvaryheader=true"
    healthcheck:
      test: ["CMD", "bun", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Web Frontend Service  
  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      args:
        NODE_ENV: production
    restart: unless-stopped
    ports:
      - "80"
    networks:
      - dokploy-network
    labels:
      # Enable Traefik
      - "traefik.enable=true"
      
      # Web Router configuration
      - "traefik.http.routers.mini-web.rule=Host(`yourdomain.com`) || Host(`www.yourdomain.com`)"
      - "traefik.http.routers.mini-web.entrypoints=websecure"
      - "traefik.http.routers.mini-web.tls.certResolver=letsencrypt"
      - "traefik.http.services.mini-web.loadbalancer.server.port=80"
      
      # Redirect www to non-www
      - "traefik.http.middlewares.mini-web-redirect.redirectregex.regex=^https://www\\.yourdomain\\.com/(.*)"
      - "traefik.http.middlewares.mini-web-redirect.redirectregex.replacement=https://yourdomain.com/$${1}"
      - "traefik.http.middlewares.mini-web-redirect.redirectregex.permanent=true"
      
      # Security headers
      - "traefik.http.middlewares.mini-web-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.mini-web-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.mini-web-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.mini-web-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.mini-web-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      
      # Apply middlewares
      - "traefik.http.routers.mini-web.middlewares=mini-web-redirect,mini-web-headers"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  dokploy-network:
    external: true

# Optional: Add volumes for persistent data if needed
# volumes:
#   api-data:
#     driver: local
